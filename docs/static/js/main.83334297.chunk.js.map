{"version":3,"sources":["components/CategoryAdd.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GitExpertApp.js","index.js"],"names":["CategoryAdd","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","placeholder","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","GitExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oMAEaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAaA,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IACxBR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACtCN,EAAc,MAKlB,SAEC,uBACGO,KAAK,OACLC,YAAY,mBACZC,MAASV,EACTW,SAnBkB,SAAER,GACxBF,EAAcE,EAAES,OAAOF,a,+BCNlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaZM,GAbY,4CAAH,sD,WCGPO,EAAc,SAAC,GAAiB,IAAD,EAAfH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAGjC,OACA,qBAAKc,UAAU,OAAf,SACI,yBAAKA,UAAU,aAAf,0BAAqC,yCAArC,0BACA,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,MAFJ,OCJOO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAErB,ECFW,SAAsBA,GACjC,MAA0Bf,mBAAS,CAC/BsB,KAAK,GACLa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAmBA,OAdAC,qBAAU,WAENxB,EAAQC,GACHwB,MAAK,SAAAC,GAEFC,YAAW,WACPJ,EAAS,CACLf,KAAKkB,EACLL,SAAQ,MAEd,UAEZ,CAACpB,IAEIqB,EDlBuBM,CAAa3B,GAA/Ba,EAAZ,EAAON,KAAYa,EAAnB,EAAmBA,QAEnB,OACI,qCACI,oBAAIJ,UAAU,mCAAd,SAAkDhB,IAEjDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEZ,qBAAKA,UAAU,YAAf,SAEIH,EAAOJ,KAAI,SAAAC,GAAG,OACb,cAAC,EAAD,eAEOA,GADGA,EAAIC,aEflBiB,EAAe,WAGxB,MAAoC3C,mBAAS,IAA7C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAEA,OACI,gCACI,8CACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBACA,6BAEQ6C,EAAWpB,KAAK,SAACT,GAAD,OACZ,cAAC,EAAD,CAEAA,SAAYA,GADJA,Y,MCZhC8B,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.83334297.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\nexport const CategoryAdd = ({setCategories}) => {\r\n\r\n    const [inputValue, setinputValue] = useState('')\r\n    const handleInputChange = ( e ) =>{\r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length>2){\r\n            setCategories (cats => [inputValue,...cats]);\r\n            setinputValue('');\r\n        }     \r\n    }\r\n\r\n    return (\r\n        <form onSubmit = {handleSubmit}>\r\n            \r\n         <input\r\n            type=\"text\" \r\n            placeholder='Search something'\r\n            value = {inputValue} \r\n            onChange = {handleInputChange}\r\n         />   \r\n\r\n        </form >\r\n    )\r\n}\r\n\r\nCategoryAdd.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async(category) =>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=UoMJtMFzDeiVDWtF9CfM3D2x0X0zrPwP`\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    \r\n    const gifs = data.map(img => {\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react';\r\n\r\n\r\nexport const GifGridItem = ({title,url}) => {\r\n\r\n    \r\n  return (\r\n  <div className='root'>\r\n      <div className='card-grid' className='card animate__animated animate__pulse'>\r\n      <img src={url} alt={title}></img>\r\n      <p>{title}</p>\r\n      </div>\r\n  </div>\r\n\r\n  );\r\n};\r\n","import React  from 'react'\r\nimport useFetchGifs from '../hooks/useFetchGifs'\r\nimport {GifGridItem} from './GifGridItem'\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images,loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className='animate__animated animate__pulse'>{category}</h3>\r\n            \r\n            {loading && <p className='animate__animated animate__flash'>Loading</p>}\r\n\r\n            <div className='card-grid'>\r\n            {\r\n                images.map(img =>(\r\n                 <GifGridItem \r\n                    key = {img.id}\r\n                    {...img }\r\n                 />\r\n                ))\r\n            }     \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState,useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport default function useFetchGifs(category) {\r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() =>{\r\n\r\n        getGifs(category)\r\n            .then(imgs => {\r\n\r\n                setTimeout(() =>{\r\n                    setstate({\r\n                        data:imgs,\r\n                        loading:false\r\n                    });\r\n                },3000)\r\n            })\r\n    },[category])\r\n    \r\n    return state; //{data:[]}\r\n}\r\n","import React, {useState} from 'react'\r\nimport { CategoryAdd } from './components/CategoryAdd';\r\nimport { GifGrid } from './components/GifGrid';\r\nexport const GitExpertApp = () => {\r\n\r\n    \r\n    const [categories, setCategories] = useState([]);\r\n\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <CategoryAdd setCategories = {setCategories}/>\r\n            <hr />\r\n            <ol>\r\n                {\r\n                    categories.map( (category) => (\r\n                        <GifGrid \r\n                        key = { category }\r\n                        category = {category}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GitExpertApp } from './GitExpertApp';\nimport './index.css';\n\nReactDOM.render(\n\n    <GitExpertApp />,\n  document.getElementById('root')\n);\n\n//"],"sourceRoot":""}